{"name":"Mass-email","tagline":"python script to send out mass emails with small differences using csv file and markdown template","body":"Mass-Email\r\n==============\r\n\r\nHave you ever wanted to send out essentially the same email out to a bunch of people, but changing a little information? Well, with Mass-Email you can do that.  \r\n\r\nAll you need to do is provide a CSV file with the different information, and a Markdown template referencing the columns in the CSV file.\r\n\r\nWhen you are done, you can just run the python script and enter your google email account information, and the subject of the email.\r\n\r\nPrerequisites\r\n-------------\r\n* jinja2 (`pip install jinja2`)\r\n* markdown (`pip install markdown`)\r\n\r\n### CSV File Syntax\r\nThe first row of the CSV file will be the variable name for the different information between emails.\r\n\r\n`name,email,company,promocode`\r\n\r\nAfter this, each row will be the information per contact.\r\n\r\n| name | email | company | promocode |\r\n| ---- | ----- | ------- | --------- |\r\n|Adam Smith | asmith@smith.com | Yzguy | 12345 | \r\n|Marky Mark|mmark@mark.com|Mark Co| |\r\n\r\n\r\nYou do not need to have every column for each contact, but if you don't you must handle that in your Markdown template with an `if statement`. This will be shown later (Notice Marky Mark does not have a promo code).\r\n\r\n### Markdown File Syntax\r\nThe Markdown file uses existing Markdown Syntax (https://help.github.com/articles/markdown-basics), but now you will be able to use Jinja2 templating syntax to add in your per-contact information.\r\n\r\n```\r\nYzguy Product Promo\r\n===================\r\n\r\nHello {{ name }},\r\n\r\nWe would like to thank you and {{ company }} for continued loyalty.\r\n\r\n{% if promocode %}\r\nFor being a long time customer, here is a promo code for a free product:  \r\n    * Promo Code: {{ promocode }}  \r\n{% endif}\r\n\r\nThank you,\r\n   Adam\r\n```  \r\n\r\nNotice the `if statement` to handle there being a promo code or not, this is how you should handle fields that are not present for all contacts.\r\n\r\n### Script Execution\r\nExecuting the script is pretty straight forward, you only need to pass in two arguments, these being a path to Markdown file, and the CSV file.\r\n\r\nex. `./mass-email.py ~/loyaltytemplate.md ~/loyaltydata.csv`\r\n\r\nYou may enter `verbose` as the third argument to output the raw emails after they are sent.  \r\nAfter that, you will need to enter your Google Email credentials (they are not stored), and a Subject for the emails.\r\n\r\n```\r\nroot@host: ~$ ./mass-email.py example-template.md example-data.csv \r\nUsername: admin@admin.com\r\nPassword: \r\nSubject: Yzguy Product Promo    \r\nEmail sent to: asmith@smith.com\r\nEmail sent to: mmark@mark.com\r\n\r\nTotal Emails Sent: 2\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}